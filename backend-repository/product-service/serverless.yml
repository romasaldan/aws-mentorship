service: aws-mentorship
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-north-1
  iamRoleStatements:
    - Effect: Allow
      Action: "sqs:*"
      Resource:
        Fn::GetAtt:
          - catalogItemsQueue
          - Arn

    - Effect: Allow
      Action: "sns:*"
      Resource:
        Ref: SNSTopic

plugins:
  - serverless-auto-swagger
  - serverless-webpack
  - serverless-esbuild
  - serverless-dynamodb-local
  - serverless-offline

custom:
  webpackIncludeModules: true

functions:
  getProductsById:
    handler: functions/getProductsById.getProductsById
    module:
    name: product
    events:
      - http:
          path: /products/{id}
          method: get

  getProductsList:
    handler: functions/getProductsList.getProductsList
    name: products
    events:
      - http:
          path: /products
          method: get

  createProduct:
    handler: functions/createProduct.createProduct
    name: createProduct
    events:
      - http:
          path: /products
          method: post

  catalogBatchProcess:
    handler: functions/catalogBatchProcess.catalogBatchProcess
    name: catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
          batchSize: 5
          enabled: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - sqs:*
        Resource:
          Fn::GetAtt:
            - catalogItemsQueue
            - Arn

resources:
  Resources:
    catalogItemsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "catalogItemsQueue"
    SNSTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "createProductTopic"
    SNSSubscriptionNotPremium:
      Type: "AWS::SNS::Subscription"
      Properties:
        Endpoint: "romasaldan@gmail.com"
        Protocol: "email"
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          productPrice: [{ numeric: ["<", 20] }]
    SNSSubscriptionPremiumProducts:
      Type: "AWS::SNS::Subscription"
      Properties:
        Endpoint: "roman_saldan@epam.com"
        Protocol: "email"
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          productPrice: [{ numeric: [">", 20] }]

    productTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: productTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    stockModel:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stockModel
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
